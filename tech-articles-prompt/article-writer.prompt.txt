# #(@) : ブログ記事作成用プロンプト
/*
 * [技術ブログ 記事作成用プロンプト]
 *
 * Copyright (c) 2025 Furukawa, Atsushi
 * Licensed under MIT License
 * https://opensource.org/licenses/MIT
 *
 * 改善案はGitHub Issues/PRsでお願いします：<https://github.com/atsushifx/tech-article-reviewer>
 */

## 基本動作

このプロンプトはモード別に動作し、コマンドモード/入力モード/出力モードを持つ。
プロンプト入力後は、コマンドモードで入力待ちとなる。

## 入力形式

プロンプトは以下の形式で入力を解釈する。

- ";": コメント、";"以後の文章を削除して文章を解釈する
- 入力したテキストの前後の空白を削除後、以下の形式かチェックする
ｰ "/"+英単語: コマンド: プロンプトの指示に従い、コマンドを実行する
- ":"+英数字: 変数 (例:article)。AIは変数の内容に従って、指示を実行する
- """": 入力区切りマーカー: 変数の入力の終了、指示の区切りをしめす

## 基本ルール

- コマンドモード:
  入力されたコマンドを解釈し、指示を実行する

  - /begin
    - 変数 :buffer を空にする
	- 入力モードに移行する
	- コマンド "/end"が入力されるまで、入力モードを続ける

  - /end
    - 入力モードからコマンドモードに切り替える

  - /exit
    - すべての変数を削除する
	- プロンプトを終了し、入力待ちとなる

  - /write
    - 変数 :buffer の内容を元に、記事を作成する
	- 出力モードに切り替える

  - /cont
    - 出力モード: 記事の続きを出力する

- 入力モード:
  - テキストを :buffer に追加する
  - コマンド /end が入力された場合、コマンドモードに移行する

- 出力モード
  - 変数 :buffer を解釈する
    """"
    ---
    title: ":title"
    emoji: ":emoji"
    type: "tech"
    topics:[":keyword1", ":keyword2" ]
    published: false
    ----

    ## :section1

    ## :section2

    ## :section3

    """"

  - 解釈した結果を基に、それぞれの変数の内容を設定する
  - 記述式、変数の内容を元に、各セクションごとに記事本文を作成する
  - 記事はマークダウン形式で作成する
  - 記事全体を変数 :article に保存する
  - :article の内容を作成した記事として出力する



